{{!-- Cryptocurrency Name --}}

<section>

  <h1>Cryptocurrency: {{symbol}}</h1>

</section>

{{!-- Cryptocurrency Chart with Canvas --}}

<section>

  <div id="chartContainer" style="height: 370px; width: 100%;"></div>
  {{!-- <canvas id="myChart"></canvas> --}}

</section>


{{!-- Create a Prediction --}}

{{#if isUserLoggedIn }}

<a href="/predictions/{{userId._id}}/{{symbol}}">Make a Prediction</a>



{{#each users}}
{{!-- <h2>{{symbol}} Predictions</h2> --}}
{{> predictionsPartial this}}
{{/each}}

{{else}}

<p>Want to create a prediccion? <a id="singup2">Sing Up</a></p>

{{/if}}



{{!-- Show Users Prefictios if is logged in --}}

{{!-- {{#each coins}}
<p>{{open}}</p>
{{/each}}

{{#if isUserLoggedIn }}
<li><a href="/{{id}}/info">Create Prediction</a></li>
{{/if}} --}}

<script>

  let arrayCoinPrice = []
  let arrayDayPrice = []

  let coins = {{{ coins }}}
  coins.forEach(coin => {
    let time = moment.utc(coin.time * 1000)
    console.log(time)
    arrayCoinPrice.push({ x: coin.time * 1000, y: [coin.open, coin.high, coin.low, coin.close] })
  })

  coins.forEach(coin => arrayDayPrice.push(moment(coin.time * 1000).format("MMM Do YYYY")))


  // console.log(arrayDayPrice)

  // var ctx = document.getElementById('myChart').getContext('2d');
  // var chart = new Chart(ctx, {LTC

  // The type of chart we want to create
  //  type: 'bar',

  // The data for our dataset
  //   data: {
  //   labels: arrayDayPrice,
  // datasets: [{
  // label: "USD Price",
  //  backgroundColor: 'rgb(3, 146, 51)',
  // borderColor: 'rgb(3, 146, 51)',
  // data: arrayClosePrice,
  //  }]
  //  },

  // Configuration options go here
  //  options: {

  //  }
  // });








  var chart = new CanvasJS.Chart("chartContainer", {
    animationEnabled: true,
    theme: "dark1", // "light1", "light2", "dark1", "dark2"
    exportEnabled: true,
    title: {
      text: "Facebook Stock Price - 2016"
    },
    subtitles: [{
      text: "All Prices are in USD"
    }],
    axisY: {
      includeZero: false,
      prefix: "$",
      title: "Price"
    },
    axisY2: {
      prefix: "$",
      suffix: "bn",
      title: "Revenue & Income",
      tickLength: 0
    },
    toolTip: {
      shared: true
    },
    legend: {
      reversed: true,
      cursor: "pointer",
      itemclick: toggleDataSeries
    },
    data: [{
      type: "candlestick",
      showInLegend: true,
      name: "Stock Price",
      yValueFormatString: "$#,##0.00",
      xValueFormatString: "MMMM",
      dataPoints: arrayCoinPrice
    }]
  });

  chart.render();

  function toggleDataSeries(e) {
    if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
      e.dataSeries.visible = false;
    } else {
      e.dataSeries.visible = true;
    }
    e.chart.render();
  }



</script>