{{!-- Cryptocurrency Name --}}

<section class="crypto-name">

  <h1>{{symbol}} Exchange</h1>
  <p>{{symbol}}/USD</p>

</section>

{{!-- Cryptocurrency Chart with Canvas --}}

<section class="canvas">

  <div id="chartContainer" style="height: 500px; width: 100%;"></div>
  {{!-- <canvas id="myChart"></canvas> --}}

</section>


{{!-- Create a Prediction --}}

<section class="create-prediction">

  {{#if isUserLoggedIn }}
  
  <div class="all-predictions">
    {{#each predictions}}
    <div class="prediction">
      <div class="one-prediction">
      <h2 class="prediction-username">{{user.name}}</h2>
        <h2>{{cryptocurrency}}</h2>
        <p>Price: {{prediction}}</p>

        <p>Price: {{price}}</p>

        <div class="one-prediction-dates">
          <p>Start Date: {{startDate}}</p>
          <p>End Date: {{endDate}}</p>
        </div>
      </div>

    </div>
    {{/each}}
  </div>

  <div class="crypto-btn-container">

    <a class="make-prediction" href="/predictions/{{userId._id}}/{{symbol}}">Make a Prediction</a>
    <a class="go-back" href="/">Go back</a>

  </div>



  {{else}}

  <p class="create-prediction-text">Want to create a prediccion?</p> <a id="signup2">Sing Up</a>

  {{/if}}

</section>

<script>

  let arrayCoinPrice = []
  let arrayDayPrice = []

  let coins = {{{ coins }}}
  coins.forEach(coin => {
    let time = moment.utc(coin.time * 1000)
    //console.log(time)
    arrayCoinPrice.push({ x: new Date(moment(coin.time * 1000).format("DD MMMM YYYY")), y: [coin.open, coin.high, coin.low, coin.close] })
  })

  coins.forEach(coin => arrayDayPrice.push(moment(coin.time * 1000).format("MMM Do YYYY")))

  //OLD VERSION CHART
  // console.log(arrayDayPrice)

  // var ctx = document.getElementById('myChart').getContext('2d');
  // var chart = new Chart(ctx, {LTC

  // The type of chart we want to create
  //  type: 'bar',

  // The data for our dataset
  //   data: {
  //   labels: arrayDayPrice,
  // datasets: [{
  // label: "USD Price",
  //  backgroundColor: 'rgb(3, 146, 51)',
  // borderColor: 'rgb(3, 146, 51)',
  // data: arrayClosePrice,
  //  }]
  //  },

  // Configuration options go here
  //  options: {

  //  }
  // });


  var chart = new CanvasJS.Chart("chartContainer", {
    animationEnabled: true,
    theme: "dark1", // "light1", "light2", "dark1", "dark2"
    exportEnabled: true,
    backgroundColor: "#292929",
    title: {
      text: "All Prices are in USD",
      fontSize: 20,
      fontWeight: "normal",
      fontFamily: "roboto"
    },
    subtitles: [{
      text: "",
    }],
    axisY: {
      includeZero: false,
      prefix: "$",
      title: "Price"
    },
    axisY2: {
      prefix: "$",
      suffix: "bn",
      title: "Revenue & Income",
      tickLength: 0
    },
    toolTip: {
      shared: true
    },
    legend: {
      reversed: true,
      cursor: "pointer",
      itemclick: toggleDataSeries
    },
    data: [{
      type: "candlestick",
      risingColor: "#058484",
      fallingColor: "#F15659",
      color: "#192125",
      showInLegend: true,
      name: "Cryptocurrency Price",
      yValueFormatString: "$#,##0.00",
      xValueFormatString: "DD MMMM YYYY",
      dataPoints: arrayCoinPrice
    }]
  });

  chart.render();

  function toggleDataSeries(e) {
    if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
      e.dataSeries.visible = false;
    } else {
      e.dataSeries.visible = true;
    }
    e.chart.render();
  }

</script>